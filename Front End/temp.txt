import flet as ft
from signin_form import *
from signup_form import *
from users_db import *
from chat_message import *
from group_message import *
from groups_db import *

def main(page: ft.Page):
    page.fonts = {
        "regular": "/assets/Poppins-Regular.ttf",
        "semi": "/assets/Poppins-SemiBold.ttf",
        "bold": "/assets/Poppins-Bold.ttf"
    }

    page.theme = ft.Theme(font_family="regular")
    page.title = "Whatsappbro Messenger"
    page.vertical_alignment = ft.MainAxisAlignment.CENTER
    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER

    # ***************  Functions             *************
    def dropdown_changed(e):
        new_message.value = new_message.value + emoji_list.value
        page.update()

    def close_banner(e):
        page.banner.open = False
        page.update()

    def open_dlg():
        page.dialog = dlg
        dlg.open = True
        page.update()

    def close_dlg(e):
        dlg.open = False
        page.route = "/"
        page.update()

    def sign_in(user: str, password: str):
        db = UsersDB()
        if not db.read_db(user, password):
            print("User doesn't exist ...")
            page.banner.open = True
            page.update()
        # else:
        #     page.session.set("user", user)
        #     page.route = "/chatlist"
        #     page.pubsub.send_all(
        #         GroupMessage(
        #             group=group,
        #         )
        #     )
        else:
            print("Redirecting to chat...")
            page.session.set("user", user)
            page.route = "/chatlist"
            # page.pubsub.send_all(
            #     Message(
            #         user=user,
            #         text=f"{user} has joined the chat.",
            #         message_type="login_message",
            #     )
            # )
            page.update()
            # print("OK")
            # gdb = GroupsDB(),
            # gdb.read_gdb(),
            # # print("Redirecting to chat...")
            # page.session.set("user", user)
            # page.route = "/chatlist"
            # page.pubsub(
            #     GroupMessage(
            #         group=group,
            #         message_type="chatlist_message",
            #     )
            # )
            # page.update()

    def sign_up(user: str, password: str):
        db = UsersDB()
        if db.write_db(user, password):
            print("User successfully registered")
            open_dlg()

    def join_chat(e):
        print(page.route)
        # page.update()
        # print("Redirecting to chat...")
        # gdb = GroupsDB()
        # gdb.read_gdb(group, group_id)
        # page.session.set("group", group)
        # page.route = "/chat/{group_id}"
        # page.pubsub(
        #     GroupMessage(
        #         group=group,
        #         message_type="chatlist_message",
        #     )
        # )
        # gdb = GroupsDB()
        # if gdb.read_gdb(group):
        #     thisgroupID = gdb.read_gdb()

        user = page.session.get("user")
        group_id = page.session.get("group_id")
        page.route = "/chat/" + str(group_id)
        + group_id
        page.pubsub.send_all(
                Message(
                    user=user,
                    text=f"{user} is online.",
                    message_type="login_message",
                    group_id=page.session.get("group_id")
                )
            )
        page.update()

    # def on_group(message: GroupMessage):
    #     if message.message_type == "chatlist_message":
    #         m = ChatGroupMessage(message)

    def on_message(message: Message):
        if page.session.get("group_id") == message.group_id:
            if message.message_type == "chat_message":
                m = ChatMessage(message)
            elif message.message_type == "login_message":
                m = ft.Text(message.text, italic=True, color=ft.colors.GREEN, size=12)
            elif message.message_type == "logout_message":
                m = ft.Text(message.text, italic=True, color=ft.colors.RED, size=12)
            chat.controls.append(m)
            page.update()


    # page.pubsub.subscribe(on_group)
    page.pubsub.subscribe(on_message)

    def send_message_click(e):
        page.pubsub.send_all(
            Message(
                user=page.session.get("user"),
                text=new_message.value,
                message_type="chat_message",
                group_id=page.session.get("group_id")
            )
        )
        new_message.value = ""
        page.update()

    def btn_signin(e):
        page.route = "/"
        page.update()

    def btn_signup(e):
        page.route = "/signup"
        page.update()

    def btn_return(e):
        page.route = "/chatlist"
        page.update()

    def btn_exit(e):
        user = page.session.get("user")
        group_id = page.session.get("group_id")
        page.pubsub.send_all(
                Message(
                    user=user,
                    text=f"{user} is offline.",
                    message_type="logout_message",
                    group_id= page.session.get("group_id")
                )
            )
        # page.update()
        page.session.remove("user")
        page.session.remove("group_id")
        page.route = "/"
        page.update()
        
    # def readGroupName(GroupName: str):
    #     gdb = GroupsDB()
    #     GroupName = gdb.read_gname()
    #     return GroupName
    
    # ************          Aplication UI              **********************************
    principal_content = ft.Column(
        [
            ft.Icon(
                    ft.icons.CHAT, 
                    size=200, 
                    color="#FFB347"
            ),
            ft.Text(value="Whatsappbro Messenger", 
                    size=50, 
                    color=ft.colors.WHITE
            ),
        ],
        height=400,
        width=600,
        alignment=ft.MainAxisAlignment.START,
        horizontal_alignment=ft.CrossAxisAlignment.START,
    )
    emoji_list = ft.Dropdown(
        on_change=dropdown_changed,
        options=[
            ft.dropdown.Option("😃"),
            ft.dropdown.Option("😊"),
            ft.dropdown.Option("😂"),
            ft.dropdown.Option("🤔"),
            ft.dropdown.Option("😭"),
            ft.dropdown.Option("😉"),
            ft.dropdown.Option("🤩"),
            ft.dropdown.Option("🥰"),
            ft.dropdown.Option("😎"),
            ft.dropdown.Option("❤️"),
            ft.dropdown.Option("🔥"),
            ft.dropdown.Option("✅"),
            ft.dropdown.Option("✨"),
            ft.dropdown.Option("👍"),
            ft.dropdown.Option("🎉"),
            ft.dropdown.Option("👉"),
            ft.dropdown.Option("⭐"),
            ft.dropdown.Option("☀️"),
            ft.dropdown.Option("👀"),
            ft.dropdown.Option("👇"),
            ft.dropdown.Option("🚀"),
            ft.dropdown.Option("🎂"),
            ft.dropdown.Option("💕"),
            ft.dropdown.Option("🏡"),
            ft.dropdown.Option("🍎"),
            ft.dropdown.Option("🎁"),
            ft.dropdown.Option("💯"),
            ft.dropdown.Option("💤"),
        ],
        width=50,
        value="😃",
        alignment=ft.alignment.center,
        border_color=ft.colors.AMBER,
        color=ft.colors.AMBER,
    )

    signin_UI = SignInForm(sign_in, btn_signup)
    signup_UI = SignUpForm(sign_up, btn_signin)

    chat = ft.ListView(
        expand=True,
        spacing=10,
        auto_scroll=True,
    )

    # group = ft.ListView(
    #     expand=True,
    #     spacing=10,
    #     auto_scroll=False,
    # )

    new_message = ft.TextField(
        hint_text="Write a message...",
        autofocus=True,
        shift_enter=True,
        min_lines=1,
        max_lines=5,
        filled=True,
        expand=True,
        on_submit=send_message_click,
    )

    page.banner = ft.Banner(
        bgcolor=ft.colors.BLACK45,
        leading=ft.Icon(
            ft.icons.ERROR, 
            color=ft.colors.RED, 
            size=40),
        content=ft.Text("Log in failed, Incorrect User Name or Password"),
        actions=[
            ft.TextButton("Ok", on_click=close_banner),
        ],
    )

    dlg = ft.AlertDialog(
        modal=True,
        title=ft.Container(
            content=ft.Icon(
                name=ft.icons.CHECK_CIRCLE_OUTLINED, color=ft.colors.GREEN, size=100
            ),
            width=120,
            height=120,
        ),
        content=ft.Text(
            value="Congratulations,\n your account has been successfully created\n Please Sign In",
            text_align=ft.TextAlign.CENTER,
        ),
        actions=[
            ft.ElevatedButton(
                text="Continue", color=ft.colors.WHITE, on_click=close_dlg
            )
        ],
        actions_alignment="center",
        on_dismiss=lambda e: print("Dialog dismissed!"),
    )

    # ****************        Routes              ******************
    def route_change(route):
        if page.route == "/":
            page.clean()
            page.add(
                ft.Row(
                    [principal_content, signin_UI],
                    alignment=ft.MainAxisAlignment.CENTER,
                )
            )

        if page.route == "/signup":
            page.clean()
            page.add(
                ft.Row(
                    [principal_content, signup_UI],
                    alignment=ft.MainAxisAlignment.CENTER,
                )
            )
        
        if page.route == "/chatlist": 
            gdb = GroupsDB()
            group_list = []
            for i in gdb.read_group():
                group = ft.Row(
                            [
                                ft.Text(value=i['group'], color=ft.colors.WHITE),
                                ft.ElevatedButton(
                                    text="Join",
                                    color="#181D27",
                                    bgcolor="#FFB347",
                                    on_click=join_chat,
                                    url=page.route.replace('list', '') + '/' + str(i['group_id']),
                                    url_target='_self'
                                ),
                            ],
                        )
                group_list.append(group)
            # gdb = GroupsDB(),
            # gdb.read_gdb(group, group_id)

            # if page.session.contains_key("group"):
            page.clean()
            page.add(
                    ft.Row(
                        [
                            ft.Text(value="Chat Flet Messenger", color=ft.colors.WHITE),
                            ft.ElevatedButton(
                                text="Log Out",
                                bgcolor=ft.colors.RED_800,
                                on_click=btn_exit,
                            ),
                        ],
                        alignment=ft.MainAxisAlignment.SPACE_AROUND,
                    ),
                )
            page.add(
                    ft.Column(
                        group_list
                    )
                )
                
        troute = ft.TemplateRoute(page.route)

        # if page.route == "/chat":
        if troute.match('/chat/:group_id'):
            page.session.set('group_id', troute.group_id)
            print(troute.group_id)
            if page.session.contains_key("user"):
                page.clean()
                # page.session.set("group_id", troute.group_id)s
                page.add(
                    ft.Row(
                        [
                            ft.Text(value="Chat Flet Messenger", color=ft.colors.WHITE),
                            ft.ElevatedButton(
                                text="Log Out",
                                bgcolor=ft.colors.RED_800,
                                on_click=btn_exit,
                            ),
                        ],
                        alignment=ft.MainAxisAlignment.SPACE_AROUND,
                    )
                )
                page.add(
                    ft.Container(
                        content=chat,
                        border=ft.border.all(1, ft.colors.OUTLINE),
                        border_radius=5,
                        padding=10,
                        expand=True,
                    )
                )
                page.add(
                    ft.Row(
                        controls=[
                            emoji_list,
                            new_message,
                            ft.IconButton(
                                icon=ft.icons.SEND_ROUNDED,
                                tooltip="Send message",
                                on_click=send_message_click,
                            ),
                        ],
                    )
                )

            else:
                page.route = "/"
                page.update()

    page.on_route_change = route_change
    page.add(
        ft.Row([principal_content, signin_UI], alignment=ft.MainAxisAlignment.CENTER)
    )
    page.update()

ft.app(target=main, view=ft.WEB_BROWSER, assets_dir="assets")

